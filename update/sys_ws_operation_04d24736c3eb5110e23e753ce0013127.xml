<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>ni_getinfo (v2)</name>
        <operation_script><![CDATA[(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    // implement resource here
    var requestUSer = request.pathParams.user_name;
    var requestNIQuery = request.queryParams.ni_query;
    var requesterusername = new GlideRecord('sys_user');
    requesterusername.get('user_name', requestUSer);

	if(!requesterusername.user_name){
		var apierr= new sn_ws_err.ServiceError();
		apierr.setDetail("No user record found for the user_name passed into the ni_info web service resource using the user_name path parameter.");
		apierr.setMessage("User not found");
		apierr.setStatus(4002);
		response.setError(apierr);
		return;
		
	}

    // Get the count of active NeedIt table records where the user from the
    // user_name path parameter is the Requested for.  The encoded query is from the
    // Query Parameter Associations.  Group by category.

    var usrNiCount = new GlideAggregate('x_58872_needit_needit');
    usrNiCount.addAggregate('COUNT');
    usrNiCount.addQuery('u_requested_for', requesterusername.sys_id);
    usrNiCount.addEncodedQuery(requestNIQuery);
    usrNiCount.groupBy('u_request_type');
    usrNiCount.query();

    var needitRecs = 0;
    var niUserRecs = [];
    var needitRecsCount = 0;

    while (usrNiCount.next()) {
        needitRecs = usrNiCount.getAggregate('COUNT');
        var reqType = usrNiCount.u_request_type.getDisplayValue();
        niUserRecs.push({
            "requestType": reqType,
            "count": needitRecs
        });
        needitRecsCount = parseInt(needitRecsCount) + parseInt(needitRecs);
    }

 //Create a body object.  Add property value pairs to the body.
var body = {};
body.totalUserNIRecs = needitRecsCount;
body.catCounts = niUserRecs;
body.user = {"User name": requesterusername.user_name,
"User ID": requesterusername.sys_id};
      
// Send the response object, which is returned to the requestor, to the body object.
response.setBody(body);
	
	
})(request, response);]]></operation_script>
        <operation_uri>/api/x_58872_needit/v2/needit_api/nigetinfo/{user_name}</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/nigetinfo/{user_name}</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description>Find the active NeedIt records for a user. Group by What needed.</short_description>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-07 18:48:25</sys_created_on>
        <sys_id>04d24736c3eb5110e23e753ce0013127</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>ni_getinfo (v2)</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_ws_operation_04d24736c3eb5110e23e753ce0013127</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-12-07 18:55:18</sys_updated_on>
        <web_service_definition display_value="NeedIt API">43b85971c3639510e23e753ce0013178</web_service_definition>
        <web_service_version display_value="v2">ccd24736c3eb5110e23e753ce0013124</web_service_version>
    </sys_ws_operation>
</record_update>
